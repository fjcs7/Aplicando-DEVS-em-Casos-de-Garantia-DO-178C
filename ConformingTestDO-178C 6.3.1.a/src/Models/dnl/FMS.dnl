add Library
<%
	import Models.utils.CmdJoystick;
%>!

A CmdJoystick has a value!
the range of CmdJoystick's value is CmdJoystick!
A Sound has a value!
the range of Sound's value is String!
A CmdOnOff has a value!
the range of CmdOnOff's value is Boolean!
A FeedbackRoll has a value!
the range of FeedbackRoll's value is Integer!
A Sound has a value!
the range of Sound's value is String!

use sendCommand with type CmdJoystick!

Initialize variables
<%
	sendCommand = new CmdJoystick();
%>!

accepts input on FeedbackRoll with type FeedbackRoll!
accepts input on CmdOnOff with type CmdOnOff!
accepts input on CmdJoystick with type CmdJoystick!

generates output on RightSound with type Sound!
generates output on LeftSound with type Sound!  
generates output on CmdJoystick with type CmdJoystick!
generates output on FeedbackRoll with type FeedbackRoll!

to start passivate in InitialState!
when in InitialState and receive CmdJoystick go to SendJoystickCommand!

hold in SendJoystickCommand for time 0.0!
after SendJoystickCommand output CmdJoystick!
from SendJoystickCommand go to InitialState!

external event for InitialState with CmdJoystick
<%
	sendCommand = (CmdJoystick)messageList.get(0).getData();
%>!

output event for SendJoystickCommand
<%
	output.add(outCmdJoystick, sendCommand);		
%>!
