add Library
<%
	import Models.utils.types.CmdJoystick;
	import Models.utils.rollModes.FeedbackRoll;
%>!

A CmdJoystick has a value!
the range of CmdJoystick's value is CmdJoystick!
A FeedbackRoll has a value!
the range of FeedbackRoll's value is FeedbackRoll!
A Sound has a value!
the range of Sound's value is String!
A CmdOnOff has a value!
the range of CmdOnOff's value is Boolean!
A Sound has a value!
the range of Sound's value is String!

use sendCommand with type CmdJoystick!
use measureFeedback with type FeedbackRoll!

Initialize variables
<%
	sendCommand = new CmdJoystick();
	measureFeedback = new FeedbackRoll();
%>!

accepts input on FeedbackRoll with type FeedbackRoll!
accepts input on CmdOnOff with type CmdOnOff!
accepts input on CmdJoystick with type CmdJoystick!

generates output on RightSound with type Sound!
generates output on LeftSound with type Sound!  
generates output on CmdJoystick with type CmdJoystick!
generates output on FeedbackRoll with type FeedbackRoll!

to start passivate in InitialState!
when in InitialState and receive CmdJoystick go to SendJoystickCommand!
when in InitialState and receive FeedbackRoll go to MeasureFeedbackRoll!

hold in SendJoystickCommand for time 0.0!
after SendJoystickCommand output CmdJoystick!
from SendJoystickCommand go to InitialState!

hold in MeasureFeedbackRoll for time 0.0!
after MeasureFeedbackRoll output RightSound!
after MeasureFeedbackRoll output LeftSound!
after MeasureFeedbackRoll output FeedbackRoll!
from MeasureFeedbackRoll go to InitialState!

external event for InitialState with CmdJoystick
<%
	sendCommand = (CmdJoystick)messageList.get(0).getData();
%>!

output event for SendJoystickCommand
<%
	output.add(outCmdJoystick, sendCommand);		
%>!

external event for MeasureFeedbackRoll with FeedbackRoll
<%
	measureFeedback = (FeedbackRoll)messageList.get(0).getData();
%>!

output event for MeasureFeedbackRoll
<%
	if (measureFeedback.isRollProblemn()){
		output.add(outLeftSound, new Sound("OFF"));
		output.add(outRightSound, new Sound("OFF"));
	}
	output.add(outFeedbackRoll, measureFeedback);		
%>!